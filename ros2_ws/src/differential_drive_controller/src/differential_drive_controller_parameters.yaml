differential_drive_controller:
  command_topic: {
    type: string,
    default_value: "~/cmd_vel",
    description:  "Which topic to subscribe to",
  }
  command_type: {
    type: string,
    default_value: "velocity",
    description:  "what interface type to use for commands. velocity or effort",
  }
  is_open_loop: {
    type: bool,
    default_value: false,
    description:  "Toggle open loop control for wheels",
  }
  command_timeout: {
    type: double,
    default_value: 1.0,
    description: "How old a command can be until the controller halts the drivetrain",
  }
  feedback_types: {
    type: string_array,
    default_value: ["velocity", "position", "effort"],
    description:  "Available feedback types",
  }
  left_wheel_names: {
    type: string_array,
    default_value: [],
    description: "Names of the left side wheels' joints",
    validation: {
      not_empty<>: []
    }
  }
  right_wheel_names: {
    type: string_array,
    default_value: [],
    description: "Names of the right side wheels' joints",
    validation: {
      not_empty<>: []
    }
  }
  wheels_per_side: {
    type: int,
    default_value: 1,
    description: "Number of wheels per side",
    validation: {
      gt<>: [0]
    }
  }
  wheel_separation: {
    type: double,
    default_value: 0.0,
    description: "Shortest distance between the left and right wheels. If this parameter is wrong, the robot will not behave correctly in curves.",
    validation: {
      gt<>: [0.0]
    }
  }
  wheel_radius: {
    type: double,
    default_value: 0.0,
    description: "Radius of a wheel, i.e., wheels size, used for transformation of linear velocity into wheel rotations. If this parameter is wrong the robot will move faster or slower then expected.",
    validation: {
      gt<>: [0.0]
    }
  }
  tf_frame_prefix: {
    type: string,
    default_value: "",
    description:  "(optional) Prefix to be appended to the tf frames, will be added to odom_id and base_frame_id before publishing. If the parameter is empty, controller's namespace will be used.",
  }
  odom_frame_id: {
    type: string,
    default_value: "odom",
    description:  "Name of the frame for odometry. This frame is parent of ``base_frame_id`` when controller publishes odometry.",
  }
  base_frame_id: {
    type: string,
    default_value: "base_link",
    description: "Name of the robot's base frame that is child of the odometry frame.",
  }
